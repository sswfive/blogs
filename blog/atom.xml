<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sswfive.github.io/blog</id>
    <title>PyShen</title>
    <updated>2024-06-28T23:16:29.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sswfive.github.io/blog"/>
    <subtitle>feedId:41215011978385457+userId:41840354283324416</subtitle>
    <icon>https://sswfive.github.io/img/head.png</icon>
    <rights>Copyright © 2024 PyShen Built with Docusaurus.&lt;p&gt;&lt;/p&gt;</rights>
    <entry>
        <title type="html"><![CDATA[Python中的那些编码规范]]></title>
        <id>https://sswfive.github.io/blog/py-coding-standards</id>
        <link href="https://sswfive.github.io/blog/py-coding-standards"/>
        <updated>2024-06-28T23:16:29.000Z</updated>
        <summary type="html"><![CDATA[1. 我们也许都知道，好的变量名和注释其实并非为计算机而写，而是为阅读者或维护者而写。]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-tip admonition_sHdn alert alert--success"><div class="admonitionHeading_ZU6Z"><span class="admonitionIcon_OmZh"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>观点</div><div class="admonitionContent_lgGS"><ol>
<li>我们也许都知道，好的变量名和注释其实并非为计算机而写，而是为阅读者或维护者而写。</li>
<li>对于下列介绍的规范及建议，除了自身训练形成习惯，还可以通过社区里提供的相关工具（如ruff）来提高效率。</li>
</ol></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="关于变量的命名">关于变量的命名<a href="https://sswfive.github.io/blog/py-coding-standards#%E5%85%B3%E4%BA%8E%E5%8F%98%E9%87%8F%E7%9A%84%E5%91%BD%E5%90%8D" class="hash-link" aria-label="关于变量的命名的直接链接" title="关于变量的命名的直接链接">​</a></h2>
<blockquote>
<p>程序中，数据都是临时存储在内存中，为了更快速查找或使用这个数据，通常把这个数据在内存中存储之后定义一个名称，这个名称就是变量， 简言之，变量就是用来标记数据在内存中的存储位置。</p>
</blockquote>
<p>在主流的编程语言中，变量命名风格主要分为驼峰命名派（CameCase）和蛇形命名派（snake_case），其中驼峰又分为大驼峰（CameCase）和小驼峰（cameCase）,在Python中，大驼峰和蛇形命名两种风格在不同场景中应用的都比较频繁，大驼峰命名主要应用在类名的定义上，其他场景绝大部分都是使用蛇形命名， 如：</p>
<ul>
<li><strong>普通变量名</strong>：变量名，要全部小写，多个词通过下划线连接,即蛇形命名；</li>
<li><strong>常量名</strong>：要全部大写，多个词通过下划线连接；</li>
<li><strong>函数(或方法)名</strong>：要全部小写，多个词通过下划线连接；</li>
<li><strong>类名</strong>：要以驼峰形式命名，即单词首字母大写，多个词的话，每个词首字母大写然后直接拼接;</li>
<li><strong>类的私有变量名</strong>: 变量名前需要加2个下划线；</li>
</ul>
<table><thead><tr><th><strong>Type</strong></th><th><strong>Public</strong></th><th><strong>Internal</strong></th></tr></thead><tbody><tr><td>Modules</td><td>lower_with_under</td><td>_lower_with_under</td></tr><tr><td>Packages</td><td>lower_with_under</td><td></td></tr><tr><td>Classes</td><td>CapWords</td><td>_CapWords</td></tr><tr><td>Exceptions</td><td>CapWords</td><td></td></tr><tr><td>Functions</td><td>lower_with_under()</td><td>_lower_with_under()</td></tr><tr><td>Global/Class Constants</td><td>CAPS_WITH_UNDER</td><td>_CAPS_WITH_UNDER</td></tr><tr><td>Global/Class Variables</td><td>lower_with_under</td><td>_lower_with_under</td></tr><tr><td>Instance Variables</td><td>lower_with_under</td><td>_lower_with_under (protected) or __lower_with_under (private)</td></tr><tr><td>Method Names</td><td>lower_with_under()</td><td>_lower_with_under() (protected) or __lower_with_under() (private)</td></tr><tr><td>Function/Method Parameters</td><td>lower_with_under</td><td></td></tr><tr><td>Local Variables</td><td>lower_with_under</td><td></td></tr></tbody></table>
<h3 class="anchor anchorWithHideOnScrollNavbar_NW94" id="一些好的实践">一些好的实践<a href="https://sswfive.github.io/blog/py-coding-standards#%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%9A%84%E5%AE%9E%E8%B7%B5" class="hash-link" aria-label="一些好的实践的直接链接" title="一些好的实践的直接链接">​</a></h3>
<ul>
<li>遵循PEP 8原则（Python官方制定的编码风格指南和建议）；</li>
<li>命名需要做到名如其意，不要吝啬名字的长度，但除了一些特殊场景，变量名一般不建议超过4个单词;</li>
<li>变量的描述性要强，比如：冬天的梅花比花的描述性更强；</li>
<li>当命名与关键字冲突时，在变量末尾加下划线，比如：class_;</li>
</ul>
<div class="language-python codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-python codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token comment" style="color:hsl(230, 4%, 64%)"># (bad) 描述性弱的名字，看不懂在做什么</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">value </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> process</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">s</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">strip</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token comment" style="color:hsl(230, 4%, 64%)"># (good) 描述性强的名字，尝试从用户输入里解析一个用户名</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">username </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> extract_username</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">input_string</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">strip</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token comment" style="color:hsl(230, 4%, 64%)"># (good) 配合布尔值类型的变量名</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">is_superuser</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">has_errors</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">allow_enmpy</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token comment" style="color:hsl(230, 4%, 64%)"># (good) 匹配int/float类型的变量名</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">port、age  </span><span class="token comment" style="color:hsl(230, 4%, 64%)"># 释义为数字的所有单词</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">user_id</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> host_id  </span><span class="token comment" style="color:hsl(230, 4%, 64%)"># 使用_id结尾的单词</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">length_of_usernmae、max_length、users_count </span><span class="token comment" style="color:hsl(230, 4%, 64%)"># 使用以length/count开头或结尾的单词</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token comment" style="color:hsl(230, 4%, 64%)"># 不建议拿一个名词的复数形式作为int类型的变量名；</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="关于注释的使用">关于注释的使用<a href="https://sswfive.github.io/blog/py-coding-standards#%E5%85%B3%E4%BA%8E%E6%B3%A8%E9%87%8A%E7%9A%84%E4%BD%BF%E7%94%A8" class="hash-link" aria-label="关于注释的使用的直接链接" title="关于注释的使用的直接链接">​</a></h2>
<p>Python中的注释主要分为以<code>#</code>开头的单行注释、和以三连字符串（<code>"""..."""</code>）表示的多行注释或文档注释。</p>
<ul>
<li>代码块注释，在代码块上一行的相同缩进处以 # 开始书写注释；代码块注释最需要写注释的地方是代码中那些技巧性的部分；对于复杂的操作，应该在其操作开始之前写上若干行注释，对于不是一目了然的代码，应该在其行尾添加注释；</li>
<li>代码行注释，在代码行的尾部跟2个空格，然后以 # 开始书写注释，行注释尽量少写；</li>
<li>TODO注释应该在所有开头处包含“TODO”字符串，紧跟着用括号括起来你的名字，email地址或其他标识符，然后是一个可选的冒号；</li>
<li>对于TODO注释的目的是用来表示“将来做某件事”，建议添加指定的日期；</li>
<li>英文注释开头要大写，结尾要写标点符号，避免语法错误和逻辑错误，中文注释也是相同要求；</li>
<li>改动代码逻辑时，一定要及时更新相关的注释；</li>
</ul>
<div class="language-python codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-python codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token comment" style="color:hsl(230, 4%, 64%)"># TODO(ssw@gmail.com): Use a "*" here for string repetition.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token comment" style="color:hsl(230, 4%, 64%)"># TODO(Luke) Change this to use relations.</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="关于导包的规范">关于导包的规范<a href="https://sswfive.github.io/blog/py-coding-standards#%E5%85%B3%E4%BA%8E%E5%AF%BC%E5%8C%85%E7%9A%84%E8%A7%84%E8%8C%83" class="hash-link" aria-label="关于导包的规范的直接链接" title="关于导包的规范的直接链接">​</a></h2>
<p>在导包时，导入的内容总应该放在文件顶部, 位于模块注释和文档字符串之后,模块全局变量和常量之前. 导入应该按照从最通用到最不通用的顺序分组:</p>
<ol>
<li>标准库导入</li>
<li>第三方库导入</li>
<li>应用程序指定导入</li>
</ol>
<h3 class="anchor anchorWithHideOnScrollNavbar_NW94" id="一些好的实践-1">一些好的实践<a href="https://sswfive.github.io/blog/py-coding-standards#%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%9A%84%E5%AE%9E%E8%B7%B5-1" class="hash-link" aria-label="一些好的实践的直接链接" title="一些好的实践的直接链接">​</a></h3>
<ul>
<li>当使用 import xxx时， 通常建议每行import只导入一个对象；</li>
<li>当使用from xxx import xxx时，import后面跟着的对象要是一个package(包对应代码目录)或者module(模块对应代码文件)，不要是一个类或者一个函数，</li>
<li>当使用from xxx import xxx时，原则上建议一行导入一个包，若实在想要在一行导入多个包，建议使用（）括号括起来；</li>
<li>当导入的包名较长时，建议使用as 进行局部重命名；</li>
<li>在工程开发上，建议引入格式化工具进行优化，当下开源的这类工具太多太多了，如isort、black，ruff（内置了前两种）;</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="关于缩进和换行">关于缩进和换行<a href="https://sswfive.github.io/blog/py-coding-standards#%E5%85%B3%E4%BA%8E%E7%BC%A9%E8%BF%9B%E5%92%8C%E6%8D%A2%E8%A1%8C" class="hash-link" aria-label="关于缩进和换行的直接链接" title="关于缩进和换行的直接链接">​</a></h2>
<ul>
<li>在python中，通常使用四个空格、或1个tab键实现缩进。但非常不建议Tab和空格混合使用；</li>
<li>一般通过代码逻辑拆分等手段来控制每行的最大长度不超过120个字符，但有些时候单行代码还是不可避免的会超过这个限制，这个时候就需要通过换行来解决问题了：<!-- -->
<ul>
<li>第一种，通过小括号进行封装，此时虽然跨行，但是仍处于一个逻辑引用之下。比如函数参数列表的场景、过长的运算语句场景
第二种，直接通过换行符()实现；</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="关于空行和空格">关于空行和空格<a href="https://sswfive.github.io/blog/py-coding-standards#%E5%85%B3%E4%BA%8E%E7%A9%BA%E8%A1%8C%E5%92%8C%E7%A9%BA%E6%A0%BC" class="hash-link" aria-label="关于空行和空格的直接链接" title="关于空行和空格的直接链接">​</a></h2>
<ul>
<li>空行规范<!-- -->
<ul>
<li>全局的(文件级别的)类和全局的函数上方要有两个空行</li>
<li>类中的函数上方要有一个空行</li>
<li>函数内部不同意群的代码块之前要有一个空行</li>
<li>不要把多行语句合并为一行(即不要使用分号分隔多条语句)</li>
<li>当使用控制语句if/while/for时，即使执行语句只有一行命令，也需要另起一行</li>
<li>代码文件尾部有且只有一个空行</li>
</ul>
</li>
<li>空格规范<!-- -->
<ul>
<li>函数的参数之间要有一个空格</li>
<li>列表、元组、字典的元素之间要有一个空格</li>
<li>字典的冒号之后要有一个空格</li>
<li>使用#注释的话，#后要有一个空格</li>
<li>操作符(例如+，-，*，/，&amp;，|，=，==，!=)两边都要有一个空格，不过括号(包括小括号、中括号和大括号)内的两端不需要空格</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="关于类或函数方法的注释">关于类或函数（方法）的注释<a href="https://sswfive.github.io/blog/py-coding-standards#%E5%85%B3%E4%BA%8E%E7%B1%BB%E6%88%96%E5%87%BD%E6%95%B0%E6%96%B9%E6%B3%95%E7%9A%84%E6%B3%A8%E9%87%8A" class="hash-link" aria-label="关于类或函数（方法）的注释的直接链接" title="关于类或函数（方法）的注释的直接链接">​</a></h2>
<p>通常使用三个双引号开始，三个双引号结尾来实现文档注释；</p>
<ol>
<li>首先用一句话简单说明这个函数是做什么，然后跟一段话来详细解释；</li>
<li>再往后就是参数列表、参数格式、返回值格式的描述；</li>
</ol>
<p><strong>示例：</strong></p>
<div class="language-python codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-python codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token keyword" style="color:hsl(301, 63%, 40%)">class</span><span class="token plain"> </span><span class="token class-name" style="color:hsl(35, 99%, 36%)">SampleClass</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token builtin" style="color:hsl(119, 34%, 47%)">object</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token triple-quoted-string string" style="color:hsl(119, 34%, 47%)">"""Summary of class here.</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token triple-quoted-string string" style="display:inline-block;color:hsl(119, 34%, 47%)"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token triple-quoted-string string" style="color:hsl(119, 34%, 47%)">    Longer class information....</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token triple-quoted-string string" style="color:hsl(119, 34%, 47%)">    Longer class information....</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token triple-quoted-string string" style="display:inline-block;color:hsl(119, 34%, 47%)"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token triple-quoted-string string" style="color:hsl(119, 34%, 47%)">    Attributes:</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token triple-quoted-string string" style="color:hsl(119, 34%, 47%)">        likes_spam: A boolean indicating if we like SPAM or not.</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token triple-quoted-string string" style="color:hsl(119, 34%, 47%)">        eggs: An integer count of the eggs we have laid.</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token triple-quoted-string string" style="color:hsl(119, 34%, 47%)">    """</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">def</span><span class="token plain"> </span><span class="token function" style="color:hsl(221, 87%, 60%)">__init__</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> likes_spam</span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token boolean" style="color:hsl(35, 99%, 36%)">False</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:hsl(119, 34%, 47%)">"""Inits SampleClass with blah."""</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        self</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">likes_spam </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> likes_spam</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        self</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain">eggs </span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token plain"> </span><span class="token number" style="color:hsl(35, 99%, 36%)">0</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">def</span><span class="token plain"> </span><span class="token function" style="color:hsl(221, 87%, 60%)">public_method</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">self</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token triple-quoted-string string" style="color:hsl(119, 34%, 47%)">"""Performs operation blah."""</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">if</span><span class="token plain"> i </span><span class="token operator" style="color:hsl(221, 87%, 60%)">&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">(</span><span class="token plain">i</span><span class="token operator" style="color:hsl(221, 87%, 60%)">-</span><span class="token number" style="color:hsl(35, 99%, 36%)">1</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">)</span><span class="token plain"> </span><span class="token operator" style="color:hsl(221, 87%, 60%)">==</span><span class="token plain"> </span><span class="token number" style="color:hsl(35, 99%, 36%)">0</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain">        </span><span class="token comment" style="color:hsl(230, 4%, 64%)"># true iff i is a power of 2</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <category label="python" term="python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Python]]></title>
        <id>https://sswfive.github.io/blog/hello-python</id>
        <link href="https://sswfive.github.io/blog/hello-python"/>
        <updated>2024-06-28T20:00:00.000Z</updated>
        <summary type="html"><![CDATA[我有一个梦想，我写的代码，可以像诗歌一样优美。我有一个梦想，我做的设计，能恰到好处，既不过度，也无不足。这种带有一点洁癖的完美主义就像一把达摩克利斯之剑，时刻提醒我，不能将就、不能妥协。   ---摘自《代码精进之路：从码农到工匠》]]></summary>
        <content type="html"><![CDATA[<div class="theme-admonition theme-admonition-tip admonition_sHdn alert alert--success"><div class="admonitionHeading_ZU6Z"><span class="admonitionIcon_OmZh"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>想法</div><div class="admonitionContent_lgGS"><p>我有一个梦想，我写的代码，可以像诗歌一样优美。我有一个梦想，我做的设计，能恰到好处，既不过度，也无不足。这种带有一点洁癖的完美主义就像一把达摩克利斯之剑，时刻提醒我，不能将就、不能妥协。   ---摘自《代码精进之路：从码农到工匠》</p></div></div>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="python之禅">Python之禅<a href="https://sswfive.github.io/blog/hello-python#python%E4%B9%8B%E7%A6%85" class="hash-link" aria-label="Python之禅的直接链接" title="Python之禅的直接链接">​</a></h2>
<div class="language-python codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-python codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token keyword" style="color:hsl(301, 63%, 40%)">import</span><span class="token plain"> this</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">The Zen of Python</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> by Tim Peters</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Beautiful </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> better than ugly</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Explicit </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> better than implicit</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Simple </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> better than </span><span class="token builtin" style="color:hsl(119, 34%, 47%)">complex</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Complex </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> better than complicated</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Flat </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> better than nested</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Sparse </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> better than dense</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Readability counts</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Special cases aren't special enough to </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">break</span><span class="token plain"> the rules</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Although practicality beats purity</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Errors should never </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">pass</span><span class="token plain"> silently</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Unless explicitly silenced</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">In the face of ambiguity</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> refuse the temptation to guess</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">There should be one</span><span class="token operator" style="color:hsl(221, 87%, 60%)">-</span><span class="token operator" style="color:hsl(221, 87%, 60%)">-</span><span class="token plain"> </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">and</span><span class="token plain"> preferably only one </span><span class="token operator" style="color:hsl(221, 87%, 60%)">-</span><span class="token operator" style="color:hsl(221, 87%, 60%)">-</span><span class="token plain">obvious way to do it</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Although that way may </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">not</span><span class="token plain"> be obvious at first unless you're Dutch</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Now </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> better than never</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Although never </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> often better than </span><span class="token operator" style="color:hsl(221, 87%, 60%)">*</span><span class="token plain">right</span><span class="token operator" style="color:hsl(221, 87%, 60%)">*</span><span class="token plain"> now</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">If the implementation </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> hard to explain</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> it's a bad idea</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">If the implementation </span><span class="token keyword" style="color:hsl(301, 63%, 40%)">is</span><span class="token plain"> easy to explain</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><span class="token plain"> it may be a good idea</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">.</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">Namespaces are one honking great idea </span><span class="token operator" style="color:hsl(221, 87%, 60%)">-</span><span class="token operator" style="color:hsl(221, 87%, 60%)">-</span><span class="token plain"> let's do more of those!</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>PyShen</name>
            <email>sswss5@aliyun.com</email>
            <uri>https://github.com/sswfive</uri>
        </author>
        <category label="Python" term="Python"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用Github Action自动化部署]]></title>
        <id>https://sswfive.github.io/blog/use-github-action-to-auto-deploy</id>
        <link href="https://sswfive.github.io/blog/use-github-action-to-auto-deploy"/>
        <updated>2022-05-11T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[如果有写过项目的经历，就免不了将代码上传到服务器上，安装依赖，然后输入启动命令的步骤。但是有的项目往往需要经常性的改动，如果还是照着上面的方式进行部署的话。先不说这样操作的效率，操作个几次就想罢工了。并且上面这样操作的往往容易误操作。而 Github Actions 正是该问题的良药。]]></summary>
        <content type="html"><![CDATA[<p>如果有写过项目的经历，就免不了将代码上传到服务器上，安装依赖，然后输入启动命令的步骤。但是有的项目往往需要经常性的改动，如果还是照着上面的方式进行部署的话。先不说这样操作的效率，操作个几次就想罢工了。并且上面这样操作的往往容易误操作。而 Github Actions 正是该问题的良药。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="介绍">介绍<a href="https://sswfive.github.io/blog/use-github-action-to-auto-deploy#%E4%BB%8B%E7%BB%8D" class="hash-link" aria-label="介绍的直接链接" title="介绍的直接链接">​</a></h2>
<p>Github Actions 是 Github 提供的免费自动化构建实现，特别适用于持续集成和持续交付的场景，它具备自动化完成许多不同任务的能力，例如构建、测试和部署等等。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="概念">概念<a href="https://sswfive.github.io/blog/use-github-action-to-auto-deploy#%E6%A6%82%E5%BF%B5" class="hash-link" aria-label="概念的直接链接" title="概念的直接链接">​</a></h2>
<p>在进行操作前，先对 Github Actions 基础知识进行补充，具体可查看 <a href="https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html" target="_blank" rel="noopener noreferrer" class="link">GitHub Actions 入门教程 阮一峰</a></p>
<p>可以在 <span style="display:inline-flex;gap:0.25rem"><span></span><a href="https://github.com/marketplace?type=actions" target="_blank" rel="noopener noreferrer" class="link">GitHub Marketplace · Actions to improve your workflow</a></span> 中找到所有的 Actions。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="实例将-vite-项目发布到-github-pages">实例：将 VIte 项目发布到 GitHub Pages<a href="https://sswfive.github.io/blog/use-github-action-to-auto-deploy#%E5%AE%9E%E4%BE%8B%E5%B0%86-vite-%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83%E5%88%B0-github-pages" class="hash-link" aria-label="实例：将 VIte 项目发布到 GitHub Pages的直接链接" title="实例：将 VIte 项目发布到 GitHub Pages的直接链接">​</a></h2>
<p>第一步：创建一个 Vite 工程，可在<a href="https://cn.vitejs.dev/guide/#scaffolding-your-first-vite-project" target="_blank" rel="noopener noreferrer" class="link">官网</a>中查看如何安装</p>
<div class="language-javascript codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-javascript codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">pnpm create vite</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>选择对应的项目名（vite-project）与模板（vue-ts）</p>
<p>第二步：打开<code>package.json</code>文件，加一个<code>homepage</code>字段，表示该应用发布后的根目录（参见<a href="https://create-react-app.dev/docs/deployment#building-for-relative-paths" target="_blank" rel="noopener noreferrer" class="link">官方文档</a>）。</p>
<div class="language-javascript codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-javascript codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token string-property property" style="color:hsl(5, 74%, 59%)">"homepage"</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">"https://[username].github.io/vite-project"</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">,</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上面代码中，将<code>[username]</code>替换成你的 GitHub 用户名。</p>
<p>第三步：在这个仓库的<code>.github/workflows</code>目录，生成一个 workflow 文件，名字可以随便取，这个示例是<code>ci.yml</code>。</p>
<p>workflow 文件如下</p>
<div class="language-yml codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-yml codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Build and Deploy</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">on</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">push</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">branches</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> master</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">jobs</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">build-and-deploy</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">runs-on</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">steps</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Checkout</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">uses</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> actions/checkout@v3</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Install and Build</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">run</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">|</span><span class="token scalar string" style="color:hsl(119, 34%, 47%)"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token scalar string" style="color:hsl(119, 34%, 47%)">          yarn install</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token scalar string" style="color:hsl(119, 34%, 47%)">          yarn run build</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Deploy</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">uses</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> peaceiris/actions</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">gh</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">pages@v3</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">with</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">personal_token</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"> secrets.ACCESS_TOKEN </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">publish_dir</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> ./dist</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>上面这个 workflow 文件的要点如下</p>
<ol>
<li>整个流程在<code>master</code>分支发生<code>push</code>事件时触发。</li>
<li>只有一个<code>job</code>，运行在虚拟机环境<code>ubuntu-latest</code>。</li>
<li>第一步是获取源码，使用的 action 是<code>actions/checkout</code>。</li>
<li>第二步是安装依赖与构建，<code>yarn install</code>和<code>yarn run build</code></li>
<li>第三步是部署到 Github Page 上，使用的 action 是 <span style="display:inline-flex;gap:0.25rem"><span></span><a href="https://github.com/marketplace/actions/github-pages-action" target="_blank" rel="noopener noreferrer" class="link">peaceiris/actions-gh-pages@v3</a></span>。其中需要设置 secrets.ACCESS_TOKEN</li>
</ol>
<p>第四步：将项目上传置 Github 仓库中，</p>
<p>该 peaceiris/actions-gh-pages 支持三种 Token，这里使用 personal_token，其生成教程在<a href="https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token" target="_blank" rel="noopener noreferrer" class="link">官方文档</a>中有详细图文，这里就不贴其生成的图了。<strong>不过记得权限过期以及勾选上 workflow</strong></p>
<div class="theme-admonition theme-admonition-tip admonition_sHdn alert alert--success"><div class="admonitionHeading_ZU6Z"><span class="admonitionIcon_OmZh"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>Tip</div><div class="admonitionContent_lgGS"><p>token 只会在生成的时候显示一次，如需要再次显示，则可以点击，但使用此令牌的任何脚本或应用程序都需要更新！</p></div></div>
<p>然后在<strong>Settings -&gt; Secrets -&gt; Actions 中 New repository secret</strong>中便可添加 secret。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.cn/image-20220511122017247.png" alt="image-20220511122017247" class="img_ZcYA"></p>
<p>这时候只要一调用 git push，就会触发对应的 workflows 文件配置。点击 Actions 便可看到 jobs 工作。</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.cn/image-20220511122420135.png" alt="image-20220511122420135" class="img_ZcYA"></p>
<p>此时访问<a href="https://kuizuo.github.io/vite-project%E5%B0%B1%E5%8F%AF%E5%91%88%E7%8E%B0vite%E9%A1%B9%E7%9B%AE%EF%BC%88%E4%B8%8D%E8%BF%87%E6%88%91%E5%B7%B2%E7%BB%8F%E6%8A%8A%E4%BB%93%E5%BA%93%E7%BB%99%E5%85%B3%E9%97%AD%E4%BA%86%EF%BC%89%EF%BC%8C%E4%BD%86%E8%BF%9B%E5%85%A5%E4%BC%9A%E7%99%BD%E5%B1%8F%EF%BC%8C%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%8F%90%E7%A4%BA" target="_blank" rel="noopener noreferrer" class="link">https://kuizuo.github.io/vite-project就可呈现vite项目（不过我已经把仓库给关闭了），但进入会白屏，控制台提示</a></p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.cn/image-20220511122914534.png" alt="image-20220511122914534" class="img_ZcYA"></p>
<p>很显然，需要静态资源请求的路径错了，正确的应该是<a href="https://kuizuo.github.io/vite-project/assets/index.2435d274.js%EF%BC%8C%E6%A0%B9%E6%8D%AEVite%E4%B8%AD%E7%9A%84%5B%E6%9E%84%E5%BB%BA%E7%94%9F%E4%BA%A7%E7%89%88%E6%9C%AC" target="_blank" rel="noopener noreferrer" class="link">https://kuizuo.github.io/vite-project/assets/index.2435d274.js，根据Vite中的[构建生产版本</a>](<a href="https://www.vitejs.net/guide/build.html#public-base-path" target="_blank" rel="noopener noreferrer" class="link">https://www.vitejs.net/guide/build.html#public-base-path</a>) 通过命令行参数 <code>--base=/vite-project/</code></p>
<p>稍加操作在 Install and Build 加上 base 参数</p>
<div class="language-javascript codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-javascript codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token operator" style="color:hsl(221, 87%, 60%)">-</span><span class="token plain"> name</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token maybe-class-name">Install</span><span class="token plain"> and </span><span class="token maybe-class-name">Build</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token literal-property property" style="color:hsl(5, 74%, 59%)">run</span><span class="token operator" style="color:hsl(221, 87%, 60%)">:</span><span class="token plain"> </span><span class="token operator" style="color:hsl(221, 87%, 60%)">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          yarn install</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          yarn run build </span><span class="token operator" style="color:hsl(221, 87%, 60%)">--</span><span class="token plain">base</span><span class="token operator" style="color:hsl(221, 87%, 60%)">=</span><span class="token regex regex-delimiter" style="color:hsl(119, 34%, 47%)">/</span><span class="token regex regex-source language-regex" style="color:hsl(119, 34%, 47%)">vite-project</span><span class="token regex regex-delimiter" style="color:hsl(119, 34%, 47%)">/</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>git push 后，稍等片刻再次访问便可得到如下页面</p>
<p><img decoding="async" loading="lazy" src="https://img.kuizuo.cn/image-20220511125536189.png" alt="image-20220511125536189" class="img_ZcYA"></p>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="ftp发布到自有服务器上">FTP发布到自有服务器上<a href="https://sswfive.github.io/blog/use-github-action-to-auto-deploy#ftp%E5%8F%91%E5%B8%83%E5%88%B0%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A" class="hash-link" aria-label="FTP发布到自有服务器上的直接链接" title="FTP发布到自有服务器上的直接链接">​</a></h2>
<p>那么现在在 Github Page 上搭建好了，但还要将编译后的文件还可以通过 FTP 协议添加自己的服务器上，这里我就以我的博客为例。</p>
<p>在服务器中开启 FTP，并添加一个用户名,密码以及根目录(这里我问选择为项目目录)</p>
<p>workflow 要做的就是新建一个 steps，这里选用 <span style="display:inline-flex;gap:0.25rem"><span></span><a href="https://github.com/SamKirkland/FTP-Deploy-Action" target="_blank" rel="noopener noreferrer" class="link">FTP-Deploy-Action</a></span>，以下是我的完整配置内容</p>
<div class="language-yml codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-yml codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> FTP Deploy</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">on</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">[</span><span class="token plain">push</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">jobs</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">build-and-deploy</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">runs-on</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">steps</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Checkout</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">uses</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> actions/checkout@v3</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Use Node.js 16</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">uses</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> actions/setup</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">node@v3</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">with</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">node-version</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">'16.x'</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Build Project</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">run</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">|</span><span class="token scalar string" style="color:hsl(119, 34%, 47%)"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token scalar string" style="color:hsl(119, 34%, 47%)">          yarn install</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token scalar string" style="color:hsl(119, 34%, 47%)">          yarn run build</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> FTP Deploy</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">uses</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> SamKirkland/FTP</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">Deploy</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">Action@4.0.0</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">with</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">server</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"> secrets.ftp_server </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">username</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"> secrets.ftp_user </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">password</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"> secrets.ftp_pwd </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">local-dir</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> ./build/</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">server-dir</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> ./</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>相信第一个实例中的 workflow 应该已经明白了，其中 ftp_server，ftp_user，ftp_pwd 都是私密信息，所以需要 New repository secret 设置这三个变量。</p>
<p>但由于 build 下存在大量文件夹与文件，所以 FTP 速度上传速度堪忧，最终耗时 17 minutes 38.4 seconds。这里只是作为 FTP 演示。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="scp发布到自有服务器上">SCP发布到自有服务器上<a href="https://sswfive.github.io/blog/use-github-action-to-auto-deploy#scp%E5%8F%91%E5%B8%83%E5%88%B0%E8%87%AA%E6%9C%89%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A" class="hash-link" aria-label="SCP发布到自有服务器上的直接链接" title="SCP发布到自有服务器上的直接链接">​</a></h2>
<p>FTP 传输文件着实过慢，所以可以通过 SCP 的方式来传输文件，这里用到了<span style="display:inline-flex;gap:0.25rem"><span></span><a href="https://github.com/marketplace/actions/ssh-deploy" target="_blank" rel="noopener noreferrer" class="link">ssh deploy · Actions</a></span>，以下是示例</p>
<div class="language-yaml codeBlockContainer_APcc theme-code-block" style="--prism-background-color:hsl(230, 1%, 98%);--prism-color:hsl(230, 8%, 24%)"><div class="codeBlockContent_m3Ux"><pre class="prism-code language-yaml codeBlock_qGQc thin-scrollbar" style="background-color:hsl(230, 1%, 98%);color:hsl(230, 8%, 24%)"><code class="codeBlockLines_p187"><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> ci</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">on</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">push</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">branches</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> main</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain"></span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">jobs</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">  </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">build-and-deploy</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">runs-on</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> ubuntu</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">latest</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">    </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">steps</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Checkout</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">uses</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> actions/checkout@v3</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Use Node.js 16</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">uses</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> actions/setup</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">node@v3</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">with</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">node-version</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">'16.x'</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> Build Project</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">run</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">|</span><span class="token scalar string" style="color:hsl(119, 34%, 47%)"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token scalar string" style="color:hsl(119, 34%, 47%)">          yarn install</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token scalar string" style="color:hsl(119, 34%, 47%)">          yarn run build</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">      </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain"> </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">name</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> SSH Deploy</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">uses</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> easingthemes/ssh</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">-</span><span class="token plain">deploy@v2.2.11</span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">        </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">env</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">SSH_PRIVATE_KEY</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"> secrets.PRIVATE_KEY </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">ARGS</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">'-avzr --delete'</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">SOURCE</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">'build'</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">REMOTE_HOST</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> $</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">{</span><span class="token plain"> secrets.REMOTE_HOST </span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">REMOTE_USER</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">'root'</span><span class="token plain"></span><br></span><span class="token-line" style="color:hsl(230, 8%, 24%)"><span class="token plain">          </span><span class="token key atrule" style="color:hsl(35, 99%, 36%)">TARGET</span><span class="token punctuation" style="color:hsl(119, 34%, 47%)">:</span><span class="token plain"> </span><span class="token string" style="color:hsl(119, 34%, 47%)">'/www/wwwroot/blog'</span><br></span></code></pre><div class="buttonGroup_6DOT"><button type="button" aria-label="复制代码到剪贴板" title="复制" class="clean-btn"><span class="copyButtonIcons_FhaS" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_phi_"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_FfTR"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>其中 <strong>PRIVATE_KEY</strong> 为服务器SSH登录的私钥，<strong>REMOTE_HOST</strong> 就是服务器的ip地址。当然，这些参数也都作为私密信息，也是要通过New repository secret来设置的。</p>
<h2 class="anchor anchorWithHideOnScrollNavbar_NW94" id="总结">总结<a href="https://sswfive.github.io/blog/use-github-action-to-auto-deploy#%E6%80%BB%E7%BB%93" class="hash-link" aria-label="总结的直接链接" title="总结的直接链接">​</a></h2>
<p>从上面的演示便可看出 Github Actions 的强大，但其实我挺早之前就了解到它能做这些事情，但迟迟没有动手尝试一番，因为这些自动化操作用人工也是能完成的。也许当时的我认为，用人工所花费的时间远比自动化操作的学习时间来的长，可又随着自己的个人应用增加，每次都需要手动发布，而此时前者的时间已远远大于后者，所以才会想去学习。</p>
<p>明知该技术是一定会接触的，为何不趁现在去了解学习呢？</p>]]></content>
        <author>
            <name>PyShen</name>
            <email>sswss5@aliyun.com</email>
            <uri>https://github.com/sswfive</uri>
        </author>
        <category label="github" term="github"/>
        <category label="git" term="git"/>
    </entry>
</feed>